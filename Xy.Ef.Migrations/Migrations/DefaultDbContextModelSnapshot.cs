// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Xy.DataBase.Core;

#nullable disable

namespace Xy.Ef.Migrations.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    partial class DefaultDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Xy.Core.Entity.SysUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasComment("主键Id");

                    b.Property<string>("Uid")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasComment("用户Uid");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("账户用户");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("用户地址");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext")
                        .HasComment("头像");

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("date")
                        .HasComment("用户生日");

                    b.Property<DateTimeOffset>("CreatedDt")
                        .HasColumnType("datetime(6)")
                        .HasComment("创建时间");

                    b.Property<string>("CreatedUid")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasComment("创建用户Uid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("电子邮箱");

                    b.Property<int?>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("int")
                        .HasComment("性别：[0-男生],[1-女生],[2-❀]");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasComment("软删除标记");

                    b.Property<string>("LastLoginDev")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("最后登录设备");

                    b.Property<DateTimeOffset?>("LastLoginDt")
                        .HasColumnType("datetime(6)")
                        .HasComment("最后登录时间");

                    b.Property<string>("LastLoginIp")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("最后登录IP");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("姓名");

                    b.Property<string>("Nick")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("昵称");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("密码");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("手机号码");

                    b.Property<string>("Remarks")
                        .HasMaxLength(88)
                        .HasColumnType("varchar(88)")
                        .HasComment("用户备注");

                    b.Property<string>("Signature")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("用户签名");

                    b.Property<int>("Status")
                        .HasMaxLength(1)
                        .HasColumnType("int")
                        .HasComment("用户状态：[0-正常],[1-禁用],[2-封禁]");

                    b.Property<DateTimeOffset?>("UpdatedDt")
                        .HasColumnType("datetime(6)")
                        .HasComment("更新时间");

                    b.Property<string>("UpdatedUid")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasComment("更新用户Uid");

                    b.HasKey("Id", "Uid")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("Sys_User", t =>
                        {
                            t.HasComment("用户表");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
